{"version":3,"file":"clonePageElement.js","sourceRoot":"","sources":["../../src/ReactRouter/clonePageElement.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,gBAAgB,CAAC,eAAqC;IACpE,IAAI,IAAY,CAAC;IACjB,IAAI,OAAO,eAAe,KAAK,QAAQ,EAAE;QACvC,IAAI,GAAG,eAAe,CAAC;KACxB;SAAM;QACL,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC;KAClC;IACD,IAAI,QAAQ,EAAE;QACZ,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QACvB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QACxB,4EAA4E;QAC5E,MAAM,aAAa,GAAG,KAAK,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;QACpE,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;YACpB,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SAC3B;QACD,OAAO,KAAK,CAAC,UAAyB,CAAC;KACxC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["export function clonePageElement(leavingViewHtml: string | HTMLElement) {\n  let html: string;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    const newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    const ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild as HTMLElement;\n  }\n  return undefined;\n}\n"]}