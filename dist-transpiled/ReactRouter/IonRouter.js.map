{"version":3,"file":"IonRouter.js","sourceRoot":"","sources":["../../src/ReactRouter/IonRouter.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AnimationBuilder } from '@ionic/core';\nimport {\n  LocationHistory,\n  NavManager,\n  RouteAction,\n  RouteInfo,\n  RouteManagerContext,\n  RouteManagerContextState,\n  RouterDirection,\n  ViewItem,\n  generateId,\n  getConfig\n} from '@ionic/react';\nimport { Action as HistoryAction, Location as HistoryLocation } from 'history';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport { IonRouteInner } from './IonRouteInner';\nimport { ReactRouterViewStack } from './ReactRouterViewStack';\nimport StackManager from './StackManager';\n\nexport interface LocationState {\n  direction?: RouterDirection;\n  routerOptions?: { as?: string, unmount?: boolean; };\n}\n\ninterface IonRouteProps extends RouteComponentProps<{}, {}, LocationState> {\n  registerHistoryListener: (cb: (location: HistoryLocation<any>, action: HistoryAction) => void) => void;\n}\n\ninterface IonRouteState {\n  routeInfo: RouteInfo;\n}\n\nclass IonRouterInner extends React.PureComponent<IonRouteProps, IonRouteState> {\n  currentTab?: string;\n  exitViewFromOtherOutletHandlers: ((pathname: string) => ViewItem | undefined)[] = [];\n  incomingRouteParams?: Partial<RouteInfo>;\n  locationHistory = new LocationHistory();\n  viewStack = new ReactRouterViewStack();\n  routeMangerContextState: RouteManagerContextState = {\n    canGoBack: () => this.locationHistory.canGoBack(),\n    clearOutlet: this.viewStack.clear,\n    findViewItemByPathname: this.viewStack.findViewItemByPathname,\n    getChildrenToRender: this.viewStack.getChildrenToRender,\n    goBack: () => this.handleNavigateBack(),\n    createViewItem: this.viewStack.createViewItem,\n    findViewItemByRouteInfo: this.viewStack.findViewItemByRouteInfo,\n    findLeavingViewItemByRouteInfo: this.viewStack.findLeavingViewItemByRouteInfo,\n    addViewItem: this.viewStack.add,\n    unMountViewItem: this.viewStack.remove\n  };\n\n  constructor(props: IonRouteProps) {\n    super(props);\n\n    const routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: this.props.location.pathname,\n      search: this.props.location.search\n    };\n\n    this.locationHistory.add(routeInfo);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleResetTab = this.handleResetTab.bind(this);\n    this.handleNavigate = this.handleNavigate.bind(this);\n    this.handleNavigateBack = this.handleNavigateBack.bind(this);\n    this.props.registerHistoryListener(this.handleHistoryChange.bind(this));\n    this.handleSetCurrentTab = this.handleSetCurrentTab.bind(this);\n\n    this.state = {\n      routeInfo\n    };\n  }\n\n  handleChangeTab(tab: string, path: string, routeOptions?: any) {\n    const routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n    const [pathname, search] = path.split('?');\n    if (routeInfo) {\n      this.incomingRouteParams = { ...routeInfo, routeAction: 'push', routeDirection: 'none' };\n      if (routeInfo.pathname === pathname) {\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n      } else {\n        this.incomingRouteParams.pathname = pathname;\n        this.incomingRouteParams.search = search ? '?' + search : undefined;\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(pathname + (search ? '?' + search : ''));\n      }\n    } else {\n      this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n    }\n  }\n\n  handleHistoryChange(location: HistoryLocation<LocationState>, action: HistoryAction) {\n    let leavingLocationInfo: RouteInfo;\n    if (this.incomingRouteParams) {\n      if (this.incomingRouteParams.routeAction === 'replace') {\n        leavingLocationInfo = this.locationHistory.previous();\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n    } else {\n      leavingLocationInfo = this.locationHistory.current();\n    }\n\n    const leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n    if (leavingUrl !== location.pathname) {\n      if (!this.incomingRouteParams) {\n        if (action === 'REPLACE') {\n          this.incomingRouteParams = {\n            routeAction: 'replace',\n            routeDirection: 'none',\n            tab: this.currentTab // TODO this isn't legit if replacing to a page that is not in the tabs\n          };\n        }\n        if (action === 'POP') {\n          const ri = this.locationHistory.current();\n          if (ri && ri.pushedByRoute) {\n            const prevInfo = this.locationHistory.findLastLocation(ri);\n            this.incomingRouteParams = { ...prevInfo, routeAction: 'pop', routeDirection: 'back' };\n          } else {\n            const direction = 'none';\n            this.incomingRouteParams = {\n              routeAction: 'pop',\n              routeDirection: direction,\n              tab: this.currentTab\n            };\n          }\n        }\n        if (!this.incomingRouteParams) {\n          this.incomingRouteParams = {\n            routeAction: 'push',\n            routeDirection: location.state?.direction || 'forward',\n            routeOptions: location.state?.routerOptions,\n            tab: this.currentTab\n          };\n        }\n      }\n\n      let routeInfo: RouteInfo;\n\n      if (this.incomingRouteParams?.id) {\n        routeInfo = {\n          ...this.incomingRouteParams as RouteInfo,\n          lastPathname: leavingLocationInfo.pathname\n        };\n        this.locationHistory.add(routeInfo);\n      } else {\n        const isPushed = (this.incomingRouteParams.routeAction === 'push' && this.incomingRouteParams.routeDirection === 'forward');\n        routeInfo = {\n          id: generateId('routeInfo'),\n          ...this.incomingRouteParams,\n          lastPathname: leavingLocationInfo.pathname,\n          pathname: location.pathname,\n          search: location.search,\n          params: this.props.match.params,\n          prevRouteLastPathname: leavingLocationInfo.lastPathname\n        };\n        if (isPushed) {\n          routeInfo.tab = leavingLocationInfo.tab;\n          routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n        } else if (routeInfo.routeAction === 'pop') {\n          const r = this.locationHistory.findLastLocation(routeInfo);\n          routeInfo.pushedByRoute = r?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n          // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n          const lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n          routeInfo.pushedByRoute = lastRoute?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'replace') {\n          // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n          const currentRouteInfo = this.locationHistory.current();\n          routeInfo.lastPathname = currentRouteInfo?.pathname || routeInfo.lastPathname;\n          routeInfo.prevRouteLastPathname = currentRouteInfo?.lastPathname;\n          routeInfo.pushedByRoute = currentRouteInfo?.pushedByRoute || routeInfo.pushedByRoute;\n          routeInfo.routeDirection = currentRouteInfo?.routeDirection || routeInfo.routeDirection;\n          routeInfo.routeAnimation = currentRouteInfo?.routeAnimation || routeInfo.routeAnimation;\n        }\n\n        this.locationHistory.add(routeInfo);\n      }\n\n      this.setState({\n        routeInfo\n      });\n    }\n\n    this.incomingRouteParams = undefined;\n  }\n\n  handleNavigate(path: string, routeAction: RouteAction, routeDirection?: RouterDirection, routeAnimation?: AnimationBuilder, routeOptions?: any, tab?: string) {\n    this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n      routeAction,\n      routeDirection,\n      routeOptions,\n      routeAnimation,\n      tab\n    });\n\n    if (routeAction === 'push') {\n      this.props.history.push(path);\n    } else {\n      this.props.history.replace(path);\n    }\n  }\n\n  handleNavigateBack(defaultHref: string | RouteInfo = '/', routeAnimation?: AnimationBuilder) {\n    const config = getConfig();\n    defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref' as any);\n    const routeInfo = this.locationHistory.current();\n    if (routeInfo && routeInfo.pushedByRoute) {\n      const prevInfo = this.locationHistory.findLastLocation(routeInfo);\n      if (prevInfo) {\n        this.incomingRouteParams = { ...prevInfo, routeAction: 'pop', routeDirection: 'back', routeAnimation: routeAnimation || routeInfo.routeAnimation };\n        if (routeInfo.lastPathname === routeInfo.pushedByRoute) {\n          this.props.history.goBack();\n        } else {\n          this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref as string, 'pop', 'back');\n      }\n    } else {\n      this.handleNavigate(defaultHref as string, 'pop', 'back');\n    }\n  }\n\n  handleResetTab(tab: string, originalHref: string, originalRouteOptions: any) {\n    const routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n    if (routeInfo) {\n      const newRouteInfo = { ...routeInfo };\n      newRouteInfo.pathname = originalHref;\n      newRouteInfo.routeOptions = originalRouteOptions;\n      this.incomingRouteParams = { ...newRouteInfo, routeAction: 'pop', routeDirection: 'back' };\n      this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n    }\n  }\n\n  handleSetCurrentTab(tab: string) {\n    this.currentTab = tab;\n    const ri = { ...this.locationHistory.current() };\n    if (ri.tab !== tab) {\n      ri.tab = tab;\n      this.locationHistory.update(ri);\n    }\n  }\n\n  render() {\n    return (\n      <RouteManagerContext.Provider\n        value={this.routeMangerContextState}\n      >\n        <NavManager\n          ionRoute={IonRouteInner}\n          ionRedirect={{}}\n          stackManager={StackManager}\n          routeInfo={this.state.routeInfo!}\n          onNavigateBack={this.handleNavigateBack}\n          onNavigate={this.handleNavigate}\n          onSetCurrentTab={this.handleSetCurrentTab}\n          onChangeTab={this.handleChangeTab}\n          onResetTab={this.handleResetTab}\n          locationHistory={this.locationHistory}\n        >\n          {this.props.children}\n        </NavManager>\n      </RouteManagerContext.Provider>\n    );\n  }\n}\n\nexport const IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\n"]}